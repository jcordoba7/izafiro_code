/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package izafiro;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author Jacc89
 */
public final class Ventana23_s1 extends javax.swing.JFrame {

    SenalVentana sv = new SenalVentana();
       
    //Variables del cambio de Ventana
    private JFrame[][] vJF;
    private int numVentanaFila ;
    private int numVentanaColm;
    
    // Variables del Movimiento
    private static final int SPEED = GestorJuego.getInstance().getSpeed(); //Velocidad de Tahi
    private static final int FRECUENCIA = GestorJuego.getInstance().getFrecuencia(); //Frecuencia del movimiento de pies de Tahi
    private static final int RADIO = 15; //Distancia para conversar con otros personajes
    private Desplazamiento desplazamiento = Desplazamiento.getInstance(); //Invocador de metodos relacionados con el desplazamiento
    private Deposito d; //Clase deposito que guerada las variables primitivas del JFrame
    
    //Variables de Interaccion con el escenario (obstaculos y conversaciones)
    private ArrayList<Conversador> conversadores;
    private ArrayList<JLabel> obstaculos;
    private Obstaculo obstaculosAbajo;
    private Obstaculo obstaculosIzquierda;
    private Obstaculo obstaculosDerecha;
    private Obstaculo obstaculosArriba;
    private ArrayList<Enemigo> enemigos;
    
    //Variable sobre el estado de Tahi
    GestorJuego t = GestorJuego.getInstance();
    
    
    /**
     * Creates new form Ventana00_s1
     */
    public Ventana23_s1() {
        initComponents();
        this.setLocationRelativeTo(null); this.setIconImage(new ImageIcon (getClass().getResource("izafiroicono.png")).getImage()); Sonidos.getInstance().activarCursor(this);
        this.d = new Deposito(tahi.getX(),tahi.getY(),this);
        cargarObstaculos();
        cargarPersonajes();
        this.addKeyListener(Teclado.getInstace());//ActionListener para deneter la musica de fodndo 
        this.addKeyListener(new Ventana23_s1.AL());//ActionListener para el movimiento del personaje    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numPuntaje1 = new javax.swing.JLabel();
        numPuntaje2 = new javax.swing.JLabel();
        numPuntaje3 = new javax.swing.JLabel();
        numPuntaje4 = new javax.swing.JLabel();
        marcoPuntaje = new javax.swing.JLabel();
        pausa = new javax.swing.JLabel();
        sound = new javax.swing.JLabel();
        ayuda = new javax.swing.JLabel();
        puntaje = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        recurso1 = new javax.swing.JLabel();
        recurso2 = new javax.swing.JLabel();
        recurso3 = new javax.swing.JLabel();
        recurso4 = new javax.swing.JLabel();
        recurso5 = new javax.swing.JLabel();
        recurso6 = new javax.swing.JLabel();
        recursos = new javax.swing.JLabel();
        energia = new javax.swing.JLabel();
        salud = new javax.swing.JLabel();
        n1 = new javax.swing.JLabel();
        n2 = new javax.swing.JLabel();
        n3 = new javax.swing.JLabel();
        n4 = new javax.swing.JLabel();
        hora = new javax.swing.JLabel();
        barra = new javax.swing.JLabel();
        cuadroDialogo = new javax.swing.JLabel();
        tiempo = new javax.swing.JLabel();
        sombra1 = new javax.swing.JLabel();
        sombra2 = new javax.swing.JLabel();
        sombra3 = new javax.swing.JLabel();
        sombra4 = new javax.swing.JLabel();
        arbol1 = new javax.swing.JLabel();
        arbol2 = new javax.swing.JLabel();
        objeto1 = new javax.swing.JLabel();
        cerca = new javax.swing.JLabel();
        espadazo = new javax.swing.JLabel();
        tahi = new javax.swing.JLabel();
        hermitano = new javax.swing.JLabel();
        arbol3 = new javax.swing.JLabel();
        arbol4 = new javax.swing.JLabel();
        puerta = new javax.swing.JLabel();
        troncoTiempo = new javax.swing.JLabel();
        gemaazul = new javax.swing.JLabel();
        gemaroja = new javax.swing.JLabel();
        obstaculo1 = new javax.swing.JLabel();
        obstaculo2 = new javax.swing.JLabel();
        obstaculo3 = new javax.swing.JLabel();
        obstaculo4 = new javax.swing.JLabel();
        obstaculo5 = new javax.swing.JLabel();
        obstaculo6 = new javax.swing.JLabel();
        obstaculo7 = new javax.swing.JLabel();
        obstaculo8 = new javax.swing.JLabel();
        obstaculo9 = new javax.swing.JLabel();
        obstaculo10 = new javax.swing.JLabel();
        obstaculo11 = new javax.swing.JLabel();
        obstaculo12 = new javax.swing.JLabel();
        obstaculo13 = new javax.swing.JLabel();
        obstaculo14 = new javax.swing.JLabel();
        obstaculo15 = new javax.swing.JLabel();
        obstaculo18 = new javax.swing.JLabel();
        obstaculo17 = new javax.swing.JLabel();
        obstaculo16 = new javax.swing.JLabel();
        obstaculoPuerta = new javax.swing.JLabel();
        obstaculoCerca = new javax.swing.JLabel();
        guardado = new javax.swing.JLabel();
        colocargemaroja = new javax.swing.JLabel();
        colocargemaazul = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("iZafiro - Bosque de las Luciérnagas");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numPuntaje1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numPuntaje1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/numerospuntaje/0.png"))); // NOI18N
        getContentPane().add(numPuntaje1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 433, 14, 29));
        numPuntaje1.getAccessibleContext().setAccessibleName("numPuntaje1");

        numPuntaje2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numPuntaje2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/numerospuntaje/0.png"))); // NOI18N
        getContentPane().add(numPuntaje2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 433, 14, 29));
        numPuntaje2.getAccessibleContext().setAccessibleName("numPuntaje2");

        numPuntaje3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numPuntaje3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/numerospuntaje/0.png"))); // NOI18N
        getContentPane().add(numPuntaje3, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 433, 14, 29));
        numPuntaje3.getAccessibleContext().setAccessibleName("numPuntaje3");

        numPuntaje4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numPuntaje4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/numerospuntaje/0.png"))); // NOI18N
        getContentPane().add(numPuntaje4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 433, 14, 29));
        numPuntaje4.getAccessibleContext().setAccessibleName("numPuntaje4");

        marcoPuntaje.setBackground(new java.awt.Color(239, 255, 239));
        marcoPuntaje.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 0), 2));
        marcoPuntaje.setOpaque(true);
        getContentPane().add(marcoPuntaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 70, 35));

        pausa.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        pausa.setForeground(new java.awt.Color(255, 255, 255));
        pausa.setText("Pausa: Tecla P");
        getContentPane().add(pausa, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, -1, -1));

        sound.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        sound.setForeground(new java.awt.Color(255, 255, 255));
        sound.setText("On/Off Música: Tecla S");
        getContentPane().add(sound, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 30, -1, -1));

        ayuda.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        ayuda.setForeground(new java.awt.Color(255, 255, 255));
        ayuda.setText("Ayuda: Tecla A");
        getContentPane().add(ayuda, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, -1, -1));

        puntaje.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        puntaje.setForeground(new java.awt.Color(255, 255, 255));
        puntaje.setText("Puntaje");
        getContentPane().add(puntaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        titulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/izafitotittlepequeno.png"))); // NOI18N
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        recurso1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/recursos/recurso0.png"))); // NOI18N
        getContentPane().add(recurso1, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 515, 28, 28));
        recurso1.getAccessibleContext().setAccessibleName("recurso1");

        recurso2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/recursos/recurso0.png"))); // NOI18N
        getContentPane().add(recurso2, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 515, 28, 28));
        recurso2.getAccessibleContext().setAccessibleName("recurso2");

        recurso3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/recursos/recurso0.png"))); // NOI18N
        getContentPane().add(recurso3, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 515, 28, 28));
        recurso3.getAccessibleContext().setAccessibleName("recurso3");

        recurso4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/recursos/recurso0.png"))); // NOI18N
        getContentPane().add(recurso4, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 550, 28, 28));
        recurso4.getAccessibleContext().setAccessibleName("recurso4");

        recurso5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/recursos/recurso0.png"))); // NOI18N
        getContentPane().add(recurso5, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 550, 28, 28));
        recurso5.getAccessibleContext().setAccessibleName("recurso5");

        recurso6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/recursos/recurso0.png"))); // NOI18N
        getContentPane().add(recurso6, new org.netbeans.lib.awtextra.AbsoluteConstraints(691, 550, 28, 28));
        recurso6.getAccessibleContext().setAccessibleName("recurso6");

        recursos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/recursos.png"))); // NOI18N
        getContentPane().add(recursos, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 508, -1, -1));

        energia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        energia.setForeground(new java.awt.Color(255, 255, 255));
        energia.setText("Salud");
        getContentPane().add(energia, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 510, -1, -1));
        energia.getAccessibleContext().setAccessibleName("");

        salud.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        salud.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/salud5.PNG"))); // NOI18N
        getContentPane().add(salud, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 530, -1, -1));
        salud.getAccessibleContext().setAccessibleName("salud");

        n1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        n1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/numeros/-.png"))); // NOI18N
        getContentPane().add(n1, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 535, 14, 29));
        n1.getAccessibleContext().setAccessibleName("n1");

        n2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        n2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/numeros/-.png"))); // NOI18N
        getContentPane().add(n2, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 535, 14, 29));
        n2.getAccessibleContext().setAccessibleName("n2");

        n3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        n3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/numeros/-.png"))); // NOI18N
        getContentPane().add(n3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 535, 14, 29));
        n3.getAccessibleContext().setAccessibleName("n3");

        n4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        n4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra/numeros/-.png"))); // NOI18N
        getContentPane().add(n4, new org.netbeans.lib.awtextra.AbsoluteConstraints(433, 535, 14, 29));
        n4.getAccessibleContext().setAccessibleName("n4");

        hora.setBackground(new java.awt.Color(0, 0, 0));
        hora.setFont(new java.awt.Font("DS-Digital", 1, 18)); // NOI18N
        hora.setForeground(new java.awt.Color(204, 0, 0));
        hora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hora.setText(":");
        hora.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        hora.setOpaque(true);
        getContentPane().add(hora, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 530, 100, 40));
        hora.getAccessibleContext().setAccessibleName("hora");

        barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/barra.png"))); // NOI18N
        barra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        barra.setMaximumSize(new java.awt.Dimension(800, 110));
        barra.setMinimumSize(new java.awt.Dimension(800, 110));
        barra.setPreferredSize(new java.awt.Dimension(800, 110));
        getContentPane().add(barra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, -1, -1));

        cuadroDialogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/dialogos/escenario1/ventana[0,2]/conversador1/dialogo1/1.png"))); // NOI18N
        getContentPane().add(cuadroDialogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 0, 0));

        tiempo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/tiempo/dia1.png"))); // NOI18N
        getContentPane().add(tiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 490));
        tiempo.getAccessibleContext().setAccessibleName("tiempo");

        sombra1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sombra1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/sombra4.png"))); // NOI18N
        sombra1.setToolTipText("");
        getContentPane().add(sombra1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 375, 0, 0));

        sombra2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sombra2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/sombra4.png"))); // NOI18N
        sombra2.setToolTipText("");
        getContentPane().add(sombra2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 377, 0, 0));

        sombra3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sombra3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/sombra4.png"))); // NOI18N
        sombra3.setToolTipText("");
        getContentPane().add(sombra3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 0, 0));

        sombra4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sombra4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/sombra4.png"))); // NOI18N
        sombra4.setToolTipText("");
        getContentPane().add(sombra4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 150, 0, 0));

        arbol1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arbol1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/arbol7.png"))); // NOI18N
        getContentPane().add(arbol1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 123, 160));

        arbol2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arbol2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/arbol7.png"))); // NOI18N
        getContentPane().add(arbol2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 260, 123, 160));

        objeto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/pilares.png"))); // NOI18N
        objeto1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(objeto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 166, -1, 134));

        cerca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/cerca2.png"))); // NOI18N
        cerca.setPreferredSize(new java.awt.Dimension(103, 32));
        getContentPane().add(cerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 430, 0, 0));

        espadazo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        espadazo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/espadazo.gif"))); // NOI18N
        getContentPane().add(espadazo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, -21, 0, 0));

        tahi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/personajes/tahi/tahi2.png"))); // NOI18N
        getContentPane().add(tahi, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 320, 32, 32));
        tahi.getAccessibleContext().setAccessibleName("tahi");

        hermitano.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/personajes/hermitano3/hermitano1.gif"))); // NOI18N
        getContentPane().add(hermitano, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 240, -1, -1));

        arbol3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arbol3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/arbol7.png"))); // NOI18N
        getContentPane().add(arbol3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 123, 160));

        arbol4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arbol4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/arbol7.png"))); // NOI18N
        getContentPane().add(arbol4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, 123, 160));

        puerta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/puerta2.png"))); // NOI18N
        getContentPane().add(puerta, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 18, 0, 0));

        troncoTiempo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        troncoTiempo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/tronco-tiempo2.png"))); // NOI18N
        getContentPane().add(troncoTiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 73, 70, -1));
        troncoTiempo.getAccessibleContext().setAccessibleName("troncoTiempo");

        gemaazul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/espaciogemas.png"))); // NOI18N
        getContentPane().add(gemaazul, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 71, -1, -1));

        gemaroja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/objetos/espaciogemas.png"))); // NOI18N
        getContentPane().add(gemaroja, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 71, -1, -1));
        getContentPane().add(obstaculo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 120, 60, 110));
        getContentPane().add(obstaculo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 58, 60));
        getContentPane().add(obstaculo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 101, 110, 65));
        getContentPane().add(obstaculo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 66, 110, 60));
        getContentPane().add(obstaculo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 0, 116, 97));
        getContentPane().add(obstaculo6, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 0, 110, 97));
        getContentPane().add(obstaculo7, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 33, 100, 87));
        getContentPane().add(obstaculo8, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 95, 150, 70));
        getContentPane().add(obstaculo9, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 197, 70, 70));
        getContentPane().add(obstaculo10, new org.netbeans.lib.awtextra.AbsoluteConstraints(713, 340, 83, 140));
        getContentPane().add(obstaculo11, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 422, 300, 67));
        getContentPane().add(obstaculo12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 312, 99, 130));
        getContentPane().add(obstaculo13, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 260, 80, 40));
        getContentPane().add(obstaculo14, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 422, 310, 67));
        getContentPane().add(obstaculo15, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 139, 20, 35));
        getContentPane().add(obstaculo18, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 139, 530, 260));
        getContentPane().add(obstaculo17, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 390, 35, 30));
        getContentPane().add(obstaculo16, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 390, 35, 30));
        getContentPane().add(obstaculoPuerta, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 95, 180, 0));
        getContentPane().add(obstaculoCerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 455, 110, 0));
        getContentPane().add(guardado, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 220, 160, 120));
        getContentPane().add(colocargemaroja, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 60, 60));
        getContentPane().add(colocargemaazul, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 60, 60));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/izafiro/imagenes/escenarios/escenario1/v23.png"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana23_s1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Ventana23_s1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arbol1;
    private javax.swing.JLabel arbol2;
    private javax.swing.JLabel arbol3;
    private javax.swing.JLabel arbol4;
    private javax.swing.JLabel ayuda;
    private javax.swing.JLabel barra;
    private javax.swing.JLabel cerca;
    private javax.swing.JLabel colocargemaazul;
    private javax.swing.JLabel colocargemaroja;
    private javax.swing.JLabel cuadroDialogo;
    private javax.swing.JLabel energia;
    private javax.swing.JLabel espadazo;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel gemaazul;
    private javax.swing.JLabel gemaroja;
    private javax.swing.JLabel guardado;
    private javax.swing.JLabel hermitano;
    private javax.swing.JLabel hora;
    private javax.swing.JLabel marcoPuntaje;
    private javax.swing.JLabel n1;
    private javax.swing.JLabel n2;
    private javax.swing.JLabel n3;
    private javax.swing.JLabel n4;
    private javax.swing.JLabel numPuntaje1;
    private javax.swing.JLabel numPuntaje2;
    private javax.swing.JLabel numPuntaje3;
    private javax.swing.JLabel numPuntaje4;
    private javax.swing.JLabel objeto1;
    private javax.swing.JLabel obstaculo1;
    private javax.swing.JLabel obstaculo10;
    private javax.swing.JLabel obstaculo11;
    private javax.swing.JLabel obstaculo12;
    private javax.swing.JLabel obstaculo13;
    private javax.swing.JLabel obstaculo14;
    private javax.swing.JLabel obstaculo15;
    private javax.swing.JLabel obstaculo16;
    private javax.swing.JLabel obstaculo17;
    private javax.swing.JLabel obstaculo18;
    private javax.swing.JLabel obstaculo2;
    private javax.swing.JLabel obstaculo3;
    private javax.swing.JLabel obstaculo4;
    private javax.swing.JLabel obstaculo5;
    private javax.swing.JLabel obstaculo6;
    private javax.swing.JLabel obstaculo7;
    private javax.swing.JLabel obstaculo8;
    private javax.swing.JLabel obstaculo9;
    private javax.swing.JLabel obstaculoCerca;
    private javax.swing.JLabel obstaculoPuerta;
    private javax.swing.JLabel pausa;
    private javax.swing.JLabel puerta;
    private javax.swing.JLabel puntaje;
    private javax.swing.JLabel recurso1;
    private javax.swing.JLabel recurso2;
    private javax.swing.JLabel recurso3;
    private javax.swing.JLabel recurso4;
    private javax.swing.JLabel recurso5;
    private javax.swing.JLabel recurso6;
    private javax.swing.JLabel recursos;
    private javax.swing.JLabel salud;
    private javax.swing.JLabel sombra1;
    private javax.swing.JLabel sombra2;
    private javax.swing.JLabel sombra3;
    private javax.swing.JLabel sombra4;
    private javax.swing.JLabel sound;
    private javax.swing.JLabel tahi;
    private javax.swing.JLabel tiempo;
    private javax.swing.JLabel titulo;
    private javax.swing.JLabel troncoTiempo;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the vJF
     */
    public JFrame[][] getvJF() {
        return vJF;
    }

    /**
     * @param vJF the vJF to set
     */
    public void setvJF(JFrame[][] vJF) {
        this.vJF = vJF;
    }

    /**
     * @return the numVentanaFila
     */
    public int getNumVentanaFila() {
        return numVentanaFila;
    }

    /**
     * @param numVentanaFila the numVentanaFila to set
     */
    public void setNumVentanaFila(int numVentanaFila) {
        this.numVentanaFila = numVentanaFila;
    }


    void setPosicionVentana(int fila, int columna) {
        this.numVentanaFila = fila;
        this.setNumVentanaColm(columna);
    }

    /**
     * @return the numVentanaColm
     */
    public int getNumVentanaColm() {
        return numVentanaColm;
    }

    /**
     * @param numVentanaColm the numVentanaColm to set
     */
    public void setNumVentanaColm(int numVentanaColm) {
        this.numVentanaColm = numVentanaColm;
    }

    private void cargarPersonajes() {
        
       conversadores = new ArrayList<>();       
       enemigos = new ArrayList<>();  
       
       ArrayList<Conversacion>conversaciones1 = new ArrayList<>();
       
       Conversacion dialogo1 = new Conversacion();                
       dialogo1.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador1/dialogo1/1.png")));
       conversaciones1.add(dialogo1);
       
       Conversador conversador1 = new Conversador(0,null,conversaciones1);//el mensaje es automatico
       
       //Se agregan los diferentes dialogos de conversador 2 (hermitano).
      
       ArrayList<Conversacion>conversaciones2 = new ArrayList<>();
       
       Conversacion dialogo2 = new Conversacion();                
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/1.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/2.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/3.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/4.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/5.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/6.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/7.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/8.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/9.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/10.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/11.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/12.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/13.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/14.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/15.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/16.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/17.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/18.png")));
       dialogo2.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo1/19.png")));
             
       Conversacion dialogo3 = new Conversacion();                
       dialogo3.getMensajes2().add(new ImageIcon (getClass().getResource("imagenes/dialogos/escenario1/ventana[2,3]/conversador2/dialogo2/1.png")));
       
       if(!GestorJuego.getInstance().getMsnApertura()[8])
       {
         conversaciones2.add(dialogo2);
       }
       conversaciones2.add(dialogo3);
       
       Conversador conversador2 = new Conversador(0,hermitano,conversaciones2);
       
       conversador2.getPosiciones().add(new ImageIcon(getClass().getResource("imagenes/personajes/hermitano3/hermitano1.gif")));
       conversador2.getPosiciones().add(new ImageIcon(getClass().getResource("imagenes/personajes/hermitano3/hermitano2.gif")));
       conversador2.getPosiciones().add(new ImageIcon(getClass().getResource("imagenes/personajes/hermitano3/hermitano3.gif")));
       conversador2.getPosiciones().add(new ImageIcon(getClass().getResource("imagenes/personajes/hermitano3/hermitano4.gif")));
       
       conversadores.add(conversador1);
       conversadores.add(conversador2);
       
       //Copia de las lista de obstaculos los cuales serán validados por los enemigos
       Obstaculo obsAba = new Obstaculo(); obsAba.setLineas((ArrayList<Linea>)obstaculosAbajo.getLineas().clone());
       Obstaculo obsArr = new Obstaculo(); obsArr.setLineas((ArrayList<Linea>)obstaculosArriba.getLineas().clone());
       Obstaculo obsDer = new Obstaculo(); obsDer.setLineas((ArrayList<Linea>)obstaculosDerecha.getLineas().clone());
       Obstaculo obsIzq = new Obstaculo(); obsIzq.setLineas((ArrayList<Linea>)obstaculosIzquierda.getLineas().clone());
       
       JLabel o = obstaculo18;  //Obstaculo que delimita al anciano, no a Tahi. 
       
       int p1 = o.getX();
       int p2 = o.getY();
       int p3 = o.getX()+o.getWidth();
       int p4 = o.getY()+o.getHeight(); 
       
       obsArr.getLineas().add(new Linea(p1,p2,p3,p2,SPEED)); //Obstaculo hacia Abajo...
       obsDer.getLineas().add(new Linea(p3,p2,p3,p4,SPEED)); //Obstaculo a la Izquierda...
       obsIzq.getLineas().add(new Linea(p1,p2,p1,p4,SPEED)); //Obstaculo a la Derecha...
       obsAba.getLineas().add(new Linea(p1,p4,p3,p4,SPEED)); //Obstaculo hacia Arriba...
       
       new Animal(this,conversador2,d,desplazamiento,obsAba,obsArr,obsIzq,obsDer,SPEED,70,tahi).start();
    }

    private void cargarObstaculos() {
        
        int p1;
        int p2;
        int p3;
        int p4;  
        
        this.obstaculos = new ArrayList<>();
        this.obstaculosAbajo = new Obstaculo();
        this.obstaculosIzquierda = new Obstaculo();
        this.obstaculosDerecha = new Obstaculo();
        this.obstaculosArriba = new Obstaculo();
        
        //------------ Definicion de los obstaculos del escenario --------------
        
        if(!GestorJuego.getInstance().getPuertas()[2]){this.obstaculos.add(this.obstaculoPuerta);}
        if(!GestorJuego.getInstance().getPuertas()[6]){this.obstaculos.add(this.obstaculoCerca);}
        
        this.obstaculos.add(this.obstaculo1);
        this.obstaculos.add(this.obstaculo2);
        this.obstaculos.add(this.obstaculo3);
        this.obstaculos.add(this.obstaculo4);
        this.obstaculos.add(this.obstaculo5);
        this.obstaculos.add(this.obstaculo6);
        this.obstaculos.add(this.obstaculo7);
        this.obstaculos.add(this.obstaculo8);
        this.obstaculos.add(this.obstaculo9);
        this.obstaculos.add(this.obstaculo10);
        this.obstaculos.add(this.obstaculo11);
        this.obstaculos.add(this.obstaculo12);
        this.obstaculos.add(this.obstaculo13);
        this.obstaculos.add(this.obstaculo14);    
        this.obstaculos.add(this.obstaculo15);
        this.obstaculos.add(this.obstaculo16);    
        this.obstaculos.add(this.obstaculo17);
        
        //----------------------------------------------------------------------
        
        for(int i = 0; i<this.obstaculos.size(); i++)
        {
           p1 = this.obstaculos.get(i).getX();
           p2 = this.obstaculos.get(i).getY();
           p3 = this.obstaculos.get(i).getX()+this.obstaculos.get(i).getWidth();
           p4 = this.obstaculos.get(i).getY()+this.obstaculos.get(i).getHeight();           
            
           this.obstaculosAbajo.getLineas().add(new Linea(p1,p2,p3,p2,SPEED)); //Obstaculos hacia Abajo...
           this.obstaculosIzquierda.getLineas().add(new Linea(p3,p2,p3,p4,SPEED)); //Obstaculos a la Izquierda...
           this.obstaculosDerecha.getLineas().add(new Linea(p1,p2,p1,p4,SPEED)); //Obstaculos a la Derecha...
           this.obstaculosArriba.getLineas().add(new Linea(p1,p4,p3,p4,SPEED)); //Obstaculos hacia Arriba...                   
        }  
    }
    
    
    public boolean validarPosicionConversadora()
    {
        int x1 = tahi.getX();
        int y1 = tahi.getY();
        int x2 = tahi.getX() + tahi.getWidth();
        int y2 = tahi.getY() + tahi.getHeight(); 
        
        
        for(int i = 0; i<this.conversadores.size(); i++)
        {
          if(this.conversadores.get(i).getDialogos() != null && conversadores.get(i).getImagen() != null)
          {            
           int limiteArriba = conversadores.get(i).getImagen().getY()-RADIO;
           int limiteDerecha = conversadores.get(i).getImagen().getX()+conversadores.get(i).getImagen().getWidth()+RADIO;
           int limiteIzquierda = conversadores.get(i).getImagen().getX()-RADIO;
           int limiteAbajo = conversadores.get(i).getImagen().getY()+conversadores.get(i).getImagen().getHeight()+RADIO;
           
           if( x1 > limiteIzquierda && x1 < limiteDerecha && y1 > limiteArriba && y1 < limiteAbajo )
           { 
              //buscar mensaje.
               d.setNumConv(i); 
               imprimirMensaje(conversadores.get(i));
               return true;
           }
           else
           {
             if( x2 > limiteIzquierda && x2 < limiteDerecha && y1 > limiteArriba && y1 < limiteAbajo )
             {
                //buscar mensaje. 
                d.setNumConv(i);  
                imprimirMensaje(conversadores.get(i));
                return true;
             }
             else
             {
                if( x1 > limiteIzquierda && x1 < limiteDerecha && y2 > limiteArriba && y2 < limiteAbajo )
                {
                   //buscar mensaje.
                   d.setNumConv(i); 
                   imprimirMensaje(conversadores.get(i));
                   return true;
                }
                else
                {
                   if( x2 > limiteIzquierda && x2 < limiteDerecha && y2 > limiteArriba && y2 < limiteAbajo )
                   {
                      //buscar mensaje. 
                      d.setNumConv(i); 
                      imprimirMensaje(conversadores.get(i));                       
                      return true;
                   }    
                }
             }
           }
         }
        }
        return false;
    }
    
    
    public void imprimirMensaje(Conversador c)
    {  
       if(c.getMensajeActual() == 0)
       {
         cuadroDialogo.setSize(cuadroDialogo.getPreferredSize());
         //cuadroDialogo.setLocation();
       }
       this.cuadroDialogo.setIcon(c.getDialogos().get(c.getDialogoActual()).getMensajes2().get(c.getMensajeActual()));
              
       //cuadroDialogo = c.getDialogos().get(c.getDialogoActual()).getMensajes().get(c.getMensajeActual());
       if(c.getMensajeActual() < c.getDialogos().get(c.getDialogoActual()).getMensajes2().size()-1)
       {
         c.setMensajeActual(c.getMensajeActual()+1); 
         d.setUltimoMensaje(false);
       }
       else
       {
         if(c.getDialogoActual() < c.getDialogos().size()-1)
         {
            c.setDialogoActual(c.getDialogoActual()+1); 
         }
         c.setMensajeActual(0);
         d.setUltimoMensaje(true);
       }
    }
    
    
    public void mensajeApertura() //Hablan Tahi o Lily luego de haber aterrizado!
    {
       d.setVentanaAbierta(true);        
       imprimirMensaje(conversadores.get(0));
    }
    
    
    public void colocarGema(int numGema)
    {
        if(numGema == 0)
        {
            if( GestorJuego.getInstance().getRecursos()[4] )
            {
                this.gemaroja.setIcon(new ImageIcon (getClass().getResource("imagenes/barra/recursos/recurso5.png")));
                GestorJuego.getInstance().abrirPuerta(6);
                Ayuda.getInstance().resaltarTeclaAyuda(false);
                
                cerca.setSize(0,0);
                obstaculosAbajo.quitarObstaculo(obstaculoCerca, obstaculosArriba, obstaculosAbajo, obstaculosDerecha, obstaculosIzquierda, SPEED);
                Sonidos.getInstance().reproducir("nuevorecurso");
                
                //arbol1.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));
                //arbol2.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));                
                //sombra1.setSize(sombra1.getPreferredSize());
                //sombra2.setSize(sombra2.getPreferredSize());
                new Florecimiento(arbol1, sombra1).start();
                new Florecimiento(arbol2, sombra2).start();
            }
        }
        else
        {
        if( GestorJuego.getInstance().getRecursos()[5] )
        {
            this.gemaazul.setIcon(new ImageIcon (getClass().getResource("imagenes/barra/recursos/recurso6.png")));
            GestorJuego.getInstance().abrirPuerta(2);
            Ayuda.getInstance().resaltarTeclaAyuda(false);
            
            puerta.setSize(0,0);
            obstaculosAbajo.quitarObstaculo(obstaculoPuerta, obstaculosArriba, obstaculosAbajo, obstaculosDerecha, obstaculosIzquierda, SPEED);
            Sonidos.getInstance().reproducir("nuevorecurso");
           
            //arbol3.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));
            //arbol4.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));            
            //sombra3.setSize(sombra3.getPreferredSize());
            //sombra4.setSize(sombra4.getPreferredSize());
            new Florecimiento(arbol3, sombra3).start();
            new Florecimiento(arbol4, sombra4).start();
         }  
       }
    }
    
    
    public class AL extends KeyAdapter
    {       
        int i = 0;
        //int cont = 0; //bandera para mostrar los mensajes que abren el juego.
        
        @Override
        public void keyPressed(KeyEvent e)
        {
            int keyCode = e.getKeyCode();
            
            if(Ayuda.getInstance().isVisible() || Pausa.getInstance().isVisible() || (keyCode == KeyEvent.VK_S))
            {
                return;
            }
            
            if(i == 0)
            {
                if(!GestorJuego.getInstance().getPuertas()[2])
                {
                    puerta.setSize(puerta.getPreferredSize());
                }  
                else
                {
                    gemaazul.setIcon(new ImageIcon (getClass().getResource("imagenes/barra/recursos/recurso6.png")));
                    arbol3.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));
                    arbol4.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));
                    sombra3.setSize(sombra3.getPreferredSize());
                    sombra4.setSize(sombra4.getPreferredSize());                    
                }
                if(!GestorJuego.getInstance().getPuertas()[6])
                {
                    cerca.setSize(cerca.getPreferredSize());
                } 
                else
                {
                    gemaroja.setIcon(new ImageIcon (getClass().getResource("imagenes/barra/recursos/recurso5.png")));
                    arbol1.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));
                    arbol2.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));                    
                    sombra1.setSize(sombra1.getPreferredSize());
                    sombra2.setSize(sombra2.getPreferredSize());
                }
                i++;
            }              
            
            if(!GestorJuego.getInstance().getMsnApertura()[7])
            {
              mensajeApertura();
              GestorJuego.getInstance().getMsnApertura()[7] = true;
            }
            
            switch(keyCode)
            {
                case (KeyEvent.VK_DOWN): if(!desplazamiento.obstaculoAba(tahi, obstaculosAbajo) && !d.isVentanaAbierta())//Se valida si hay obstaculo
                                         {
                                            tahi.setLocation(tahi.getX(),tahi.getY()+SPEED);
                                         }
                                         desplazamiento.avanzar(tahi, 1, 3, FRECUENCIA, d); //Movimiento de los pies
                                         if(tahi.getY() > fondo.getHeight()-5)  //Se valida si tahi sale de la ventana
                                         {
                                            Tiempo.getInstance(null).setCancionDia(1);
                                            if(Tiempo.getInstance(null).getEstado().equals("dia"))
                                            {
                                                Tiempo.getInstance(null).actualizarCambio(true);
                                            } 
                                            else
                                            {
                                                Tiempo.getInstance(null).actualizarCambio(false);
                                            }
                                            desplazamiento.cambiarPantalla(GestorJuego.getInstance().getvJF()[getNumVentanaFila()][getNumVentanaColm()],GestorJuego.getInstance().getvJF()[getNumVentanaFila()+1][getNumVentanaColm()],tahi,tahi.getX(),0,SPEED);      
                                            i=0;
                                         }
                                         break;
                    
                case (KeyEvent.VK_RIGHT): if(!desplazamiento.obstaculoDer(tahi, obstaculosDerecha) && !d.isVentanaAbierta())//Se valida si hay obstaculo
                                          {
                                            tahi.setLocation(tahi.getX()+SPEED,tahi.getY());
                                          }  
                                          desplazamiento.avanzar(tahi, 7, 9, FRECUENCIA, d); //Movimiento de los pies
                                          if(tahi.getX() > fondo.getWidth()-5) //Se valida si tahi sale de la ventana
                                          {                                                      
                                            desplazamiento.cambiarPantalla(GestorJuego.getInstance().getvJF()[getNumVentanaFila()][getNumVentanaColm()],GestorJuego.getInstance().getvJF()[getNumVentanaFila()][getNumVentanaColm()+1],tahi,0,tahi.getY(),SPEED);    
                                            i=0;
                                          }
                                          break;  
                    
                case (KeyEvent.VK_UP): if(!desplazamiento.obstaculoArr(tahi, obstaculosArriba) && !d.isVentanaAbierta())//Se valida si hay obstaculo
                                       {
                                         tahi.setLocation(tahi.getX(),tahi.getY()-SPEED);
                                       } 
                                       desplazamiento.avanzar(tahi, 10, 12, FRECUENCIA, d); //Movimiento de los pies
                                       if(tahi.getY()+tahi.getHeight() < 5) //Se valida si tahi sale de la ventana
                                       {
                                          Tiempo.getInstance(null).setCancionDia(2);
                                          if(Tiempo.getInstance(null).getEstado().equals("tarde"))
                                          {
                                            Tiempo.getInstance(null).actualizarCambio(false);
                                          } 
                                          else
                                          {
                                            Tiempo.getInstance(null).actualizarCambio(true);
                                          }
                                          desplazamiento.cambiarPantalla(GestorJuego.getInstance().getvJF()[getNumVentanaFila()][getNumVentanaColm()],GestorJuego.getInstance().getvJF()[getNumVentanaFila()-1][getNumVentanaColm()],tahi,tahi.getX(),fondo.getHeight()-tahi.getHeight(),SPEED);
                                          i=0;
                                       }
                                       break;
                    
                case (KeyEvent.VK_LEFT): if(!desplazamiento.obstaculoIzq(tahi, obstaculosIzquierda) && !d.isVentanaAbierta())//Se valida si hay obstaculo
                                         {
                                           tahi.setLocation(tahi.getX()-SPEED,tahi.getY());
                                         }
                                         desplazamiento.avanzar(tahi, 4, 6, FRECUENCIA, d); //Movimiento de los pies
                                         if(tahi.getX()+tahi.getWidth() < 5) //Se valida si tahi sale de la ventana
                                         {
                                            desplazamiento.cambiarPantalla(GestorJuego.getInstance().getvJF()[getNumVentanaFila()][getNumVentanaColm()],GestorJuego.getInstance().getvJF()[getNumVentanaFila()][getNumVentanaColm()-1],tahi,fondo.getWidth() - tahi.getWidth(),tahi.getY(),SPEED);  
                                            i=0;
                                         }
                                         break;
                    
                case (KeyEvent.VK_SPACE): if(GestorJuego.getInstance().getRecursos()[0]){new Espadazo(enemigos,espadazo,tahi).start();}                                        
                                          break;
                    
                case (KeyEvent.VK_ENTER): if( !d.isVentanaAbierta() )
                                          {
                                             if(validarPosicionConversadora())
                                             { 
                                                d.setVentanaAbierta(true); 
                                             }
                                             else if(desplazamiento.contiene(guardado, tahi.getLocation()))// Cerca a los pilares de salvado.
                                             {       
                                                GuardarPartida.getInstance().guardarPartida(numVentanaFila, numVentanaColm, tahi.getLocation());                                                
                                             }
                                             else if(desplazamiento.contiene(troncoTiempo, tahi.getLocation()))// Cerca al tronco del reloj.
                                             {
                                               if(sv.i == 0)
                                               {        
                                                  new Reloj(GestorJuego.getInstance().getvJF()[getNumVentanaFila()][getNumVentanaColm()],sv).start();
                                               }
                                             }
                                             else if(desplazamiento.contiene(colocargemaroja, tahi.getLocation()))// Cerca al lugar de la gema roja.
                                             {
                                               colocarGema(0);                                               
                                             }
                                             else if(desplazamiento.contiene(colocargemaazul, tahi.getLocation()))// Cerca al lugar d ela gema azul.
                                             {
                                               colocarGema(1);                                               
                                             }
                                          }
                                          else
                                          {
                                             casosEspeciales(); 
                                             if(d.isUltimoMensaje())
                                             {                                                  
                                                cuadroDialogo.setSize(0,0); 
                                                d.setVentanaAbierta(false);
                                                if(cuadroDialogo.getIcon().toString().contains("19")) //ultimo mensaje de la larga charla
                                                {
                                                  GestorJuego.getInstance().getMsnApertura()[8] = true;
                                                  Ayuda.getInstance().resaltarTeclaAyuda(true);
                                                } 
                                             }
                                             else
                                             {
                                               imprimirMensaje(conversadores.get(d.getNumConv()));
                                             }
                                          }
                                          break;
            }
        }
        public void casosEspeciales()
        {          
          if(cuadroDialogo.getIcon().toString().contains("11")) //espadazo de muestra
          {
            if(GestorJuego.getInstance().getRecursos()[0]){new Espadazo(enemigos,espadazo,tahi).start();} 
          }          
        }
        
        @Override
        public void keyReleased(KeyEvent e) //Cambio de imagen a estatica sobre Tahi (hacia adelante o hacia atras)
        {
            int keyCode = e.getKeyCode();            
                       
            switch(keyCode)
            {
                case (KeyEvent.VK_DOWN): desplazamiento.detenerse(tahi, 0);break; //Se detiene hacia adelante.     
                case (KeyEvent.VK_UP): desplazamiento.detenerse(tahi, 1);break; //Se detiene hacia atras. 
            }
        }
    }
    
    public class Florecimiento extends Thread
    {
        private JLabel imgArbol;
        private JLabel imgSombra;
        
        public Florecimiento (JLabel imgArbol, JLabel imgSombra)
        {
            this.imgArbol = imgArbol;
            this.imgSombra = imgSombra;
        }
        
        @Override
        public void run()
        {            
            for (int i = 1; i < 8; i++) 
            {
                imgArbol.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol-floreciendo" + i + ".png")));
                try { Thread.sleep(300); } catch (InterruptedException ex) {}
            }            
            imgArbol.setIcon(new ImageIcon (getClass().getResource("imagenes/objetos/florecimiento/arbol8.png")));
            imgSombra.setSize(sombra2.getPreferredSize());
        }
    }
    
}
